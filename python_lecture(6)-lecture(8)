#controle flow
#conditional statements

'''indentation represents the code where it belongs'''
'''indentation genrally in 4 or 8 spaces'''

#using if else function
a=True
if True:
    print("the value is true")
else:
    print("this value is false")


#using elif function
a=5
if a==3:
    print("this value is 3")
elif a==5:
    print("this value is 5")
else:
    print("this value is not 3 or 5")

#nested if else function
x:int(-inf,inf)
G->x
a=x<0
b=x==0
c=x>0
aintb = b int c =a int c =phi

q=canprofile a accses profile B
a = isFriend
b = isBlocked
c = is Admin
d = isMarkzuckerberg

a b c d q  '''we done some true or false'''
0 0 0 0 0
0 0 0 1 1
0 0 1 0 1
0 0 1 1 1
0 1 0 0 0
0 1 0 1 1

if _____:
    print("has access")
else:
    print("access denined")

#while function
a=1
while a<10:
    print(a)
    a += 1

while battery.notDead():
    pas

#python for loop
a=1
a:__iter__

print(type(name))
print("***")
for c in name:
    print(c)
    print(type(c))


for i is range(5):
    print(i)

a=range(5)
a=__iter__

#infinite loop
for i in range(5):
    print(i) #3
    if i ==3: #3
        break

for i is [0,1,2,3,4]: #i=2
    print(i) #i=2
    i=100 #i=100
    print(i) #i=100

if True:
    pass   '''pass statement to creat empty block'''
print("rest of the code")

for i is range(5):
    print(i)
    if i ==3:
        break
else:
    print('somthing')


for i in range(n):
    for j in range(n):
        print(i,end=' ')
    print()

for i in range (n):
    for j in range(n):
        print(n-j,end=" ")
    print()


for i in range(n):
    for j in range(n):
        print(max(i+1 ,j+1,n-1,n-j),end=" ")
    print()

for i in range(n):
    for j in range(n):
        print(max(i,j),end=" ")
    print()


for i in range(n):
    for j in range(n):
        print(j),end=" ")
    print()

for i in range(n):
    for j in range(n):
        print(i, end=" ")
    print()

for i in range(n):
     for j in range(n):
        print(i, end=" ")
    print()


#functions
'''def(function name(argument())'''
'''these functions are generated'''


















